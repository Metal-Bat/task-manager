# Generated by Django 5.0.8 on 2024-08-25 14:57

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Sprint",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="ROW_CREATED_AT")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="ROW_LAST_MODIFICATION")),
                ("is_active", models.BooleanField(default=True, verbose_name="ROW_ACTIVE")),
                (
                    "title",
                    models.CharField(
                        help_text="SPRINT_MODEL_TITLE_HELP_TEXT",
                        max_length=255,
                        unique=True,
                        verbose_name="SPRINT_MODEL_TITLE",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[("BACKLOG", "Backlog"), ("ACTIVE", "Active"), ("FUTURE", "Future")],
                        default="FUTURE",
                        help_text="SPRINT_MODEL_STATE_HELP_TEXT",
                        max_length=255,
                        verbose_name="SPRINT_MODEL_STATE",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HistoricalSprint",
            fields=[
                ("id", models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                ("created_at", models.DateTimeField(blank=True, editable=False, verbose_name="ROW_CREATED_AT")),
                (
                    "modified_at",
                    models.DateTimeField(blank=True, editable=False, verbose_name="ROW_LAST_MODIFICATION"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="ROW_ACTIVE")),
                (
                    "title",
                    models.CharField(
                        db_index=True,
                        help_text="SPRINT_MODEL_TITLE_HELP_TEXT",
                        max_length=255,
                        verbose_name="SPRINT_MODEL_TITLE",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[("BACKLOG", "Backlog"), ("ACTIVE", "Active"), ("FUTURE", "Future")],
                        default="FUTURE",
                        help_text="SPRINT_MODEL_STATE_HELP_TEXT",
                        max_length=255,
                        verbose_name="SPRINT_MODEL_STATE",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "ROW_HISTORY",
                "verbose_name_plural": "historical sprints",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTask",
            fields=[
                ("id", models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                ("created_at", models.DateTimeField(blank=True, editable=False, verbose_name="ROW_CREATED_AT")),
                (
                    "modified_at",
                    models.DateTimeField(blank=True, editable=False, verbose_name="ROW_LAST_MODIFICATION"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="ROW_ACTIVE")),
                (
                    "title",
                    models.CharField(
                        help_text="TASK_MODEL_SPRINT_HELP_TEXT", max_length=255, verbose_name="TASK_MODEL_TITLE"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("PEND", "Pend"),
                            ("TO_DEVELOP", "To Develop"),
                            ("DEVELOPING", "Developing"),
                            ("TO_REVIEW", "To Review"),
                            ("APPROVED", "Approved"),
                            ("TO_TEST", "To Test"),
                            ("DELIVERED", "Delivered"),
                        ],
                        default="TO_DEVELOP",
                        help_text="TASK_MODEL_STATE_HELP_TEXT",
                        max_length=255,
                        verbose_name="TASK_MODEL_STATE",
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="TASK_MODEL_DUE_DATE_HELP_TEXT",
                        null=True,
                        verbose_name="TASK_MODEL_DUE_DATE",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="TASK_MODEL_ASSIGNED_TO_HELP_TEXT",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="TASK_MODEL_ASSIGNED_TO",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="TASK_MODEL_REVIEWED_BY_HELP_TEXT",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="TASK_MODEL_REVIEWED_BY",
                    ),
                ),
                (
                    "sprint",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="TASK_MODEL_SPRINT_HELP_TEXT",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="task.sprint",
                        verbose_name="TASK_MODEL_SPRINT",
                    ),
                ),
            ],
            options={
                "verbose_name": "ROW_HISTORY",
                "verbose_name_plural": "historical tasks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="ROW_CREATED_AT")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="ROW_LAST_MODIFICATION")),
                ("is_active", models.BooleanField(default=True, verbose_name="ROW_ACTIVE")),
                (
                    "title",
                    models.CharField(
                        help_text="TASK_MODEL_SPRINT_HELP_TEXT", max_length=255, verbose_name="TASK_MODEL_TITLE"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("PEND", "Pend"),
                            ("TO_DEVELOP", "To Develop"),
                            ("DEVELOPING", "Developing"),
                            ("TO_REVIEW", "To Review"),
                            ("APPROVED", "Approved"),
                            ("TO_TEST", "To Test"),
                            ("DELIVERED", "Delivered"),
                        ],
                        default="TO_DEVELOP",
                        help_text="TASK_MODEL_STATE_HELP_TEXT",
                        max_length=255,
                        verbose_name="TASK_MODEL_STATE",
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="TASK_MODEL_DUE_DATE_HELP_TEXT",
                        null=True,
                        verbose_name="TASK_MODEL_DUE_DATE",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="TASK_MODEL_ASSIGNED_TO_HELP_TEXT",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="TASK_MODEL_ASSIGNED_TO",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="TASK_MODEL_REVIEWED_BY_HELP_TEXT",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="TASK_MODEL_REVIEWED_BY",
                    ),
                ),
                (
                    "sprint",
                    models.ForeignKey(
                        help_text="TASK_MODEL_SPRINT_HELP_TEXT",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="task.sprint",
                        verbose_name="TASK_MODEL_SPRINT",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
