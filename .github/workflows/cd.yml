name: CD

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  workflow_dispatch:
    inputs:
      debug:
        description: "debug reasult the outcome"
        type: boolean
        required: false
        default: false

      command_timeout:
        description: "timeout of operation"
        type: string
        required: false
        default: 10m

      script_stop:
        description: "stop script on first failure"
        type: boolean
        required: false
        default: false

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  pytest:
    runs-on: ubuntu-latest
    needs:
      - linter
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build the Stack
        run: docker compose -f local.yml build django

      - name: Run DB Migrations
        run: docker compose -f local.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run: docker compose -f local.yml run --rm django pytest

      - name: Tear down the Stack
        run: docker compose -f local.yml down

  deploy:
    name: Deploy to Production
    needs:
      - pytest
    runs-on: ubuntu-latest

    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          command_timeout: ${{ inputs.command_timeout }}
          debug: ${{ inputs.debug }}
          script_stop: ${{ inputs.script_stop }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            git checkout ${{ secrets.MAIN_BRANCH }}
            git pull origin ${{ secrets.MAIN_BRANCH }}
            docker-compose -f production.yml up --build -d
            docker-compose -f production.yml run --rm django python manage.py migrate
            docker-compose -f production.yml  run --rm django python manage.py compilemessages
            git status
